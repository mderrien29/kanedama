// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppService getAnswer should call AppService with the expected parameters 1`] = `
Array [
  Array [
    Array [
      Object {
        "account_id": "id",
        "account_number": "1234",
        "account_type": "ACCOUNT",
        "available": 10000,
        "currency": "USD",
        "current": 10000,
        "iban": "iban",
        "sort_code": "sort",
        "swift_bic": "bic",
        "update_timestamp": "2021-08-30",
      },
    ],
  ],
]
`;

exports[`AppService getAnswer should call MetricsService with the expected parameters 1`] = `
Array [
  Array [
    Array [
      Object {
        "account_id": "id",
        "account_number": "1234",
        "account_type": "ACCOUNT",
        "available": 10000,
        "currency": "USD",
        "current": 10000,
        "iban": "iban",
        "sort_code": "sort",
        "swift_bic": "bic",
        "update_timestamp": "2021-08-30",
      },
    ],
    Array [
      Object {
        "amount": 1000,
        "currency": "GBP",
        "status": "status",
        "timestamp": "2019-08-30",
        "transaction_category": "category",
        "transaction_type": "type",
      },
      Object {
        "amount": 10,
        "currency": "GBP",
        "status": "status",
        "timestamp": "2020-08-30",
        "transaction_category": "category",
        "transaction_type": "type",
      },
      Object {
        "amount": -20,
        "currency": "GBP",
        "status": "status",
        "timestamp": "2020-08-30",
        "transaction_category": "category",
        "transaction_type": "type",
      },
      Object {
        "amount": 100,
        "currency": "GBP",
        "status": "status",
        "timestamp": "2020-08-31",
        "transaction_category": "category",
        "transaction_type": "type",
      },
      Object {
        "amount": 5,
        "currency": "GBP",
        "status": "status",
        "timestamp": "2020-10-20",
        "transaction_category": "category",
        "transaction_type": "type",
      },
      Object {
        "amount": -100,
        "currency": "GBP",
        "status": "status",
        "timestamp": "2020-11-01",
        "transaction_category": "category",
        "transaction_type": "type",
      },
    ],
  ],
]
`;

exports[`AppService getAnswer should return the result from MetricsService 1`] = `
Object {
  "3_years_activity": true,
  "6_month_average_income": 407,
  "max_balance": 19540,
  "min_balance": -4285,
}
`;

exports[`AppService getAnswer should throw human readable error if API fails 1`] = `
Object {
  "error": "Application failed to retrieve data from API, due to Error: mock",
  "status": 500,
}
`;

exports[`AppService getAnswer should throw human readable error if calculations fails 1`] = `
Object {
  "error": "Application failed to calculate metrics, due to Error: mock",
  "status": 500,
}
`;
